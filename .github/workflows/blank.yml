name: Deploy to Alibaba Cloud FC

on:
  workflow_dispatch:
  push:
    branches: [ "dev", "int", "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # 默认环境变量，可在各环境或分支中覆盖
  FC_REGION: "cn-beijing"
  FC_MEMORY_SIZE: 128
  FC_TIMEOUT: 30

jobs:
  deploy-dev:
    if: github.ref == 'refs/heads/dev'
    name: Deploy to Development
    runs-on: ubuntu-latest
    environment: dev
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Serverless Devs
      run: npm install -g @serverless-devs/s

    - name: Configure Serverless Devs
      run: |
        s config add \
          --AccessKeyID ${{ secrets.DEV_AUTOMATION_AK }} \
          --AccessKeySecret ${{ secrets.DEV_AUTOMATION_SK }} \
          --AccountID ${{ secrets.DEV_AUTOMATION_ID }} \
          -a default -f

    - name: Clean Serverless Devs Cache
      run: s clean --all

    - name: Debug Environment Variables
      run: |
        echo "=== Current Directory ==="
        pwd
        ls -la
        echo "=== Pipeline Callback FC Directory ==="
        ls -la pipeline-callback-fc/
        echo "=== Environment Variables ==="
        echo "FC_REGION: $FC_REGION"
        echo "FC_MEMORY_SIZE: $FC_MEMORY_SIZE"
        echo "FC_TIMEOUT: $FC_TIMEOUT"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"

    - name: Deploy to Dev Environment
      env:
        GITHUB_REF_NAME: dev
        FC_REGION: ${{ vars.FC_REGION || 'cn-beijing' }}
        FC_MEMORY_SIZE: ${{ vars.FC_MEMORY_SIZE || '128' }}
        FC_TIMEOUT: ${{ vars.FC_TIMEOUT || '30' }}
      working-directory: ./pipeline-callback-fc
      run: |
        echo "Deploying with environment variables:"
        echo "FC_REGION: $FC_REGION"
        echo "FC_MEMORY_SIZE: $FC_MEMORY_SIZE"
        echo "FC_TIMEOUT: $FC_TIMEOUT"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
        s deploy -y --debug

  deploy-int:
    if: github.ref == 'refs/heads/int'
    name: Deploy to Integration
    runs-on: ubuntu-latest
    environment: int
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Serverless Devs
      run: npm install -g @serverless-devs/s

    - name: Configure Serverless Devs
      run: |
        s config add \
          --AccessKeyID ${{ secrets.DEV_AUTOMATION_AK }} \
          --AccessKeySecret ${{ secrets.DEV_AUTOMATION_SK }} \
          --AccountID ${{ secrets.DEV_AUTOMATION_ID }} \
          -a default -f

    - name: Clean Serverless Devs Cache
      run: s clean --all

    - name: Debug Environment Variables
      run: |
        echo "=== Environment Variables ==="
        echo "FC_REGION: $FC_REGION"
        echo "FC_MEMORY_SIZE: $FC_MEMORY_SIZE"
        echo "FC_TIMEOUT: $FC_TIMEOUT"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"

    - name: Deploy to Int Environment
      env:
        GITHUB_REF_NAME: int
        FC_REGION: ${{ vars.FC_REGION || 'cn-beijing' }}
        FC_MEMORY_SIZE: ${{ vars.FC_MEMORY_SIZE || '256' }}
        FC_TIMEOUT: ${{ vars.FC_TIMEOUT || '60' }}
      working-directory: ./pipeline-callback-fc
      run: |
        echo "Deploying to Integration environment"
        s deploy -y --debug

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: prod
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Serverless Devs
      run: npm install -g @serverless-devs/s

    - name: Configure Serverless Devs with Production Credentials
      run: |
        s config add \
          --AccessKeyID ${{ secrets.DEV_AUTOMATION_AK }} \
          --AccessKeySecret ${{ secrets.DEV_AUTOMATION_SK }} \
          -a default -f

    - name: Debug Environment Variables
      run: |
        echo "=== Environment Variables ==="
        echo "FC_REGION: $FC_REGION"
        echo "FC_MEMORY_SIZE: $FC_MEMORY_SIZE"
        echo "FC_TIMEOUT: $FC_TIMEOUT"
        echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"

    - name: Deploy to Production Environment
      env:
        GITHUB_REF_NAME: prod
        FC_REGION: ${{ vars.FC_REGION || 'cn-beijing' }}
        FC_MEMORY_SIZE: ${{ vars.FC_MEMORY_SIZE || '512' }}
        FC_TIMEOUT: ${{ vars.FC_TIMEOUT || '60' }}
      working-directory: ./pipeline-callback-fc
      run: |
        echo "Deploying to Production environment"
        s deploy -y --debug
